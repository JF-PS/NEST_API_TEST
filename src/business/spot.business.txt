import { Injectable } from '@nestjs/common';

import { SpotEntity } from 'src/entity/spot.entity';
import ErrorService from 'src/service/error.service';
import { SpotListInput } from 'src/dto/spot-list-input';
import { TokenService } from 'src/service/token.service';
import { SpotByIdResponse } from 'src/dto/spotByIdResponse';
import { AuthRepository } from 'src/repository/auth.repository';
import { DeleteSpotResponse } from 'src/dto/delete-spot-response';

@Injectable()
export class SpotBusiness {
  constructor(
    private authRepository: AuthRepository,
    private tokenService: TokenService,
    private errorService: ErrorService,
  ) {}

  async getById(id: string): Promise<SpotByIdResponse> {
    return null;
  }

  async getAll(spotListInput: SpotListInput): Promise<[SpotEntity]> {
    return null;
  }

  async create(createSpotInput: SpotEntity): Promise<SpotEntity> {
    return null;
  }

  async update(updateSpotInput: SpotEntity): Promise<SpotEntity> {
    return null;
  }

  async delete(id: string): Promise<DeleteSpotResponse> {
    return null;
  }
}
